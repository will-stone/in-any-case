{
  "name": "in-any-case",
  "displayName": "In Any Case",
  "version": "1.1.6",
  "description": "Convert between string cases",
  "categories": [
    "Other"
  ],
  "keywords": [
    "case",
    "convert",
    "string",
    "text"
  ],
  "bugs": {
    "url": "https://github.com/will-stone/in-any-case/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/will-stone/in-any-case"
  },
  "license": "MIT",
  "publisher": "will-stone",
  "main": "./dist/extension.js",
  "scripts": {
    "precompile": "rimraf dist",
    "compile": "tsc",
    "lint": "eslint './**/*.ts'",
    "release": "vsce publish",
    "pretest": "yarn compile",
    "test": "node ./dist/test/runTest.js",
    "typecheck": "tsc --noEmit --skipLibCheck",
    "vscode:prepublish": "yarn webpack:prod",
    "prewebpack": "rimraf dist",
    "webpack": "webpack --mode development",
    "prewebpack:prod": "rimraf dist",
    "webpack:prod": "webpack --mode production",
    "webpack:watch": "yarn webpack --watch"
  },
  "contributes": {
    "commands": [
      {
        "category": "In Any Case",
        "command": "extension.iac.camelCase",
        "title": "camelCase"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.capitalize",
        "title": "Capitalize"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.constantCase",
        "title": "CONSTANT_CASE"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.deburr",
        "title": "Deburr"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.escape",
        "title": "Escape"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.kebabCase",
        "title": "kebab-case"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.lowerCase",
        "title": "lower case"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.lowerFirst",
        "title": "lOWER FIRST"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.pascalCase",
        "title": "PascalCase"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.snakeCase",
        "title": "snake_case"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.startCase",
        "title": "Start Case"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.titleCase",
        "title": "Title Case"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.toLower",
        "title": "to_lower"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.toUpper",
        "title": "TO_UPPER"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.unescape",
        "title": "Unescape"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.upperCase",
        "title": "UPPER CASE"
      },
      {
        "category": "In Any Case",
        "command": "extension.iac.upperFirst",
        "title": "Upper first"
      }
    ]
  },
  "activationEvents": [
    "onCommand:extension.iac.camelCase",
    "onCommand:extension.iac.capitalize",
    "onCommand:extension.iac.constantCase",
    "onCommand:extension.iac.deburr",
    "onCommand:extension.iac.escape",
    "onCommand:extension.iac.kebabCase",
    "onCommand:extension.iac.lowerCase",
    "onCommand:extension.iac.lowerFirst",
    "onCommand:extension.iac.pascalCase",
    "onCommand:extension.iac.snakeCase",
    "onCommand:extension.iac.startCase",
    "onCommand:extension.iac.titleCase",
    "onCommand:extension.iac.toLower",
    "onCommand:extension.iac.toUpper",
    "onCommand:extension.iac.unescape",
    "onCommand:extension.iac.upperCase",
    "onCommand:extension.iac.upperFirst"
  ],
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{css,json,md}": [
      "prettier --write"
    ],
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix"
    ]
  },
  "prettier": "@will-stone/prettier-config",
  "eslintConfig": {
    "extends": [
      "@will-stone/eslint-config",
      "@will-stone/eslint-config/node",
      "@will-stone/eslint-config/typescript"
    ]
  },
  "dependencies": {
    "lodash": "^4.17.20",
    "tings": "^0.0.15"
  },
  "devDependencies": {
    "@types/glob": "^7.1.2",
    "@types/lodash": "^4.14.160",
    "@types/mocha": "^7.0.2",
    "@types/node": "^14.11.2",
    "@types/vscode": "1.48.0",
    "@will-stone/eslint-config": "^1.19.0",
    "@will-stone/prettier-config": "^3.1.0",
    "eslint": "^7.7.0",
    "glob": "^7.1.6",
    "husky": "^4.2.5",
    "lint-staged": "^10.2.11",
    "mocha": "^8.1.1",
    "prettier": "^2.0.5",
    "rimraf": "^3.0.2",
    "ts-loader": "^8.0.2",
    "typescript": "^4.0.2",
    "vsce": "^1.78.0",
    "vscode-test": "^1.4.0",
    "webpack": "^4.44.1",
    "webpack-cli": "^3.3.12"
  },
  "engines": {
    "vscode": "^1.48.0"
  },
  "icon": "icon.png",
  "galleryBanner": {
    "color": "#222222",
    "theme": "dark"
  }
}
